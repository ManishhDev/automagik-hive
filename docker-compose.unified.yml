# Automagik Hive Docker Compose - AGENT Profile
version: '3.8'

networks:
  hive-network:
    external: true

volumes:
  hive-postgres-data:
    external: true
  hive-agent-data:
    external: true
  hive-genie-data:
    external: true

services:
  # Core Database (always included)
  hive-postgres-core:
    image: postgres:16-alpine
    profiles: ["core", "all"]
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: hive_core
    ports:
      - "5532:5432"
    volumes:
      - hive-postgres-data:/var/lib/postgresql/data
    networks:
      - hive-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d hive_core"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Agent Stack
  hive-agent-postgres:
    image: postgres:16-alpine
    profiles: ["agent", "all"]
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: hive_agent
    ports:
      - "35532:5432"
    volumes:
      - hive-agent-data:/var/lib/postgresql/data
    networks:
      - hive-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d hive_agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  hive-agent-api:
    image: python:3.12-slim
    profiles: ["agent", "all"]
    user: "1000:1000"
    depends_on:
      hive-agent-postgres:
        condition: service_healthy
    environment:
      HIVE_DATABASE_URL: postgresql://hive:hive@hive-agent-postgres:5432/hive_agent
      HOME: /tmp
      UV_CACHE_DIR: /tmp/uv-cache
    ports:
      - "38886:8000"
    networks:
      - hive-network
    working_dir: /app
    volumes:
      - .:/app
    command: ["sh", "-c", "pip install uv && /tmp/.local/bin/uv sync --no-dev && /tmp/.local/bin/uv add psycopg2-binary && /tmp/.local/bin/uv run python -m api.serve"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Genie Stack
  hive-genie-postgres:
    image: postgres:16-alpine
    profiles: ["genie", "all"]
    environment:
      POSTGRES_USER: hive
      POSTGRES_PASSWORD: hive
      POSTGRES_DB: hive_genie
    ports:
      - "48532:5432"
    volumes:
      - hive-genie-data:/var/lib/postgresql/data
    networks:
      - hive-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U hive -d hive_genie"]
      interval: 10s
      timeout: 5s
      retries: 5

  hive-genie-api:
    image: python:3.12-slim
    profiles: ["genie", "all"]
    user: "1000:1000"
    depends_on:
      hive-genie-postgres:
        condition: service_healthy
    environment:
      HIVE_DATABASE_URL: postgresql://hive:hive@hive-genie-postgres:5432/hive_genie
      HOME: /tmp
      UV_CACHE_DIR: /tmp/uv-cache
    ports:
      - "48886:8000"
    networks:
      - hive-network
    working_dir: /app
    volumes:
      - .:/app
    command: ["sh", "-c", "pip install uv && /tmp/.local/bin/uv sync --no-dev && /tmp/.local/bin/uv add psycopg2-binary && /tmp/.local/bin/uv run python -m api.serve"]
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8000/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
