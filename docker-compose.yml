# Simplified Docker Compose for PagBank Multi-Agent System
# Essential services only: App + PostgreSQL


services:
  # Main application service
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        BUILD_VERSION: ${BUILD_VERSION:-latest}
        BUILD_DATE: ${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}
        GIT_SHA: ${GIT_SHA:-$(git rev-parse HEAD 2>/dev/null || echo "unknown")}
    container_name: pagbank-agents
    restart: unless-stopped
    ports:
      - "${API_PORT:-9888}:${API_PORT:-9888}"
    environment:
      - DATABASE_URL=postgresql://ai:ai@postgres:5432/ai
      - RUNTIME_ENV=prd
      - LOG_LEVEL=info
      - API_HOST=0.0.0.0
      - API_PORT=${API_PORT:-9888}
      - API_WORKERS=${API_WORKERS:-4}
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-9888}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL database with pgvector extension
  postgres:
    image: agnohq/pgvector:16
    container_name: pagbank-pgvector
    restart: unless-stopped
    environment:
      - POSTGRES_DB=ai
      - POSTGRES_USER=ai
      - POSTGRES_PASSWORD=ai
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
    ports:
      - "5532:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ai"]
      interval: 10s
      timeout: 5s
      retries: 5
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB

# Network configuration
networks:
  app_network:
    driver: bridge

# Persistent volumes
volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local
  app_data:
    driver: local