# Optimized Docker Compose for Automagik Hive Multi-Agent System
# Essential services only: App + PostgreSQL with BuildKit optimizations
#
# To enable BuildKit optimizations, run:
# export DOCKER_BUILDKIT=1
# export COMPOSE_DOCKER_CLI_BUILD=1

x-build-args: &build-args
  BUILD_VERSION: ${BUILD_VERSION:-latest}
  BUILD_DATE: ${BUILD_DATE:-$(date -u +%Y-%m-%dT%H:%M:%SZ)}
  GIT_SHA: ${GIT_SHA:-$(git rev-parse HEAD 2>/dev/null || echo "unknown")}

services:
  # Main application service with optimized build
  app:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        <<: *build-args
      # BuildKit optimizations for faster rebuilds
      cache_from:
        - type=registry,ref=hive-agents:cache
      cache_to:
        - type=registry,ref=hive-agents:cache,mode=max
      platforms:
        - linux/amd64
      target: production
    container_name: hive-agents
    restart: unless-stopped
    ports:
      - "${API_PORT:-9888}:${API_PORT:-9888}"
    environment:
      # Database connection with psycopg3 syntax
      - HIVE_DATABASE_URL=postgresql+psycopg://${POSTGRES_USER:-ai}:${POSTGRES_PASSWORD:-ai}@postgres:5432/${POSTGRES_DB:-hive}
      - RUNTIME_ENV=prd
      - HIVE_LOG_LEVEL=info
      - HIVE_API_HOST=0.0.0.0
      - HIVE_API_PORT=${API_PORT:-9888}
      - HIVE_API_WORKERS=${API_WORKERS:-4}
      # Performance optimizations
      - PYTHONUNBUFFERED=1
      - PYTHONDONTWRITEBYTECODE=1
    volumes:
      - app_logs:/app/logs
      - app_data:/app/data
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - app_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${API_PORT:-9888}/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

  # PostgreSQL database with pgvector extension
  postgres:
    image: agnohq/pgvector:16
    container_name: hive-postgres
    restart: unless-stopped
    environment:
      # Extract from URL: postgresql+psycopg://user:pass@host:port/db
      - POSTGRES_USER
      - POSTGRES_PASSWORD  
      - POSTGRES_DB=hive
      - PGDATA=/var/lib/postgresql/data/pgdata
    volumes:
      - ./data/postgres:/var/lib/postgresql/data
    command: >
      postgres
      -c max_connections=200
      -c shared_buffers=256MB
      -c effective_cache_size=1GB
    ports:
      - "5532:5432"
    networks:
      - app_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-ai}"]
      interval: 10s
      timeout: 5s
      retries: 5

# Network configuration
networks:
  app_network:
    driver: bridge

# Persistent volumes
volumes:
  app_logs:
    driver: local
  app_data:
    driver: local