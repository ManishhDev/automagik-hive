Metadata-Version: 2.4
Name: pagbank
Version: 0.1.0
Summary: PagBank Multi-Agent System - Financial Assistant with Portuguese Support
Requires-Python: >=3.12
Description-Content-Type: text/markdown
Requires-Dist: agno>=1.7.0
Requires-Dist: psycopg2-binary>=2.9.9
Requires-Dist: sqlalchemy>=2.0.0
Requires-Dist: asyncpg>=0.29.0
Requires-Dist: anthropic>=0.31.0
Requires-Dist: sentence-transformers>=2.2.0
Requires-Dist: pgvector>=0.2.0
Requires-Dist: pandas>=2.0.0
Requires-Dist: pydantic>=2.0.0
Requires-Dist: python-dotenv>=1.0.0
Requires-Dist: rich>=13.0.0
Requires-Dist: aiofiles>=24.1.0
Requires-Dist: openai>=1.93.2
Requires-Dist: cohere>=5.15.0
Requires-Dist: psycopg[binary]>=3.2.9
Provides-Extra: dev
Requires-Dist: pytest>=8.4.1; extra == "dev"
Requires-Dist: pytest-asyncio>=1.0.0; extra == "dev"
Requires-Dist: pytest-mock>=3.14.1; extra == "dev"
Requires-Dist: pytest-cov>=6.2.1; extra == "dev"
Requires-Dist: black>=23.0.0; extra == "dev"
Requires-Dist: flake8>=6.0.0; extra == "dev"
Requires-Dist: mypy>=1.5.0; extra == "dev"
Requires-Dist: pre-commit>=3.4.0; extra == "dev"
Requires-Dist: pyflakes>=3.4.0; extra == "dev"
Requires-Dist: isort>=5.12.0; extra == "dev"

# PagBank Multi-Agent System

A sophisticated multi-agent customer service system built with the Agno framework, designed specifically for PagBank's Brazilian market needs.

## 🚀 Quick Start

```bash
# Run the Agno Playground demo
uv run python playground.py
```

## 📋 System Overview

The PagBank Multi-Agent System uses advanced AI orchestration to provide intelligent customer service across five specialized domains:

### Teams
- **Cards Team** 💳 - Credit/debit card issues, limits, invoices
- **Digital Account Team** 🏦 - PIX, transfers, balance, statements  
- **Investments Team** 💰 - CDB, investment products, compliance
- **Credit Team** 💸 - Loans, FGTS, fraud protection
- **Insurance Team** 🛡️ - Insurance products, claims, coverage

### Key Features
- 🇧🇷 Native Portuguese language support with typo correction
- 🚨 Advanced fraud detection and scam prevention
- 😤 Frustration detection and human escalation
- 🧠 Persistent memory and pattern recognition
- 📚 Team-specific knowledge filtering
- ⚡ <2s response time optimization

## 🏗️ Architecture

```
┌─────────────────────────┐
│   Main Orchestrator     │ (Route Mode)
│  - Query Analysis       │
│  - Team Selection       │
│  - Frustration Monitor  │
└───────────┬─────────────┘
            │
    ┌───────┴───────┐
    │               │
┌───▼────┐    ┌────▼────┐
│ Teams   │    │Escalation│
│(Coordinate)  │ Systems  │
└─────────┘    └─────────┘
```

## 🛠️ Technical Stack

- **Framework**: Agno (Multi-Agent Orchestration)
- **LLM**: Claude Sonnet 4 (claude-sonnet-4-20250514)
- **Knowledge Base**: CSV with PgVector embeddings
- **Memory**: Agno Memory v2 with SqliteMemoryDb
- **Language**: Python 3.11+

## 📁 Project Structure

```
pagbank/
├── orchestrator/          # Main routing and orchestration
├── teams/                 # Specialist team implementations
├── knowledge/            # Knowledge base and filtering
├── memory/               # Memory and pattern detection
├── escalation_systems/   # Human handoff and technical escalation
├── config/               # Configuration and settings
├── playground.py         # Agno Playground demo
└── docs/                 # Documentation
```

## 🎮 Demo Scenarios

The playground includes pre-configured scenarios:
1. New customer onboarding
2. Card problems with escalation
3. Investment consultation  
4. Credit fraud detection
5. Insurance claims
6. Multi-service journey

## 🔧 Configuration

Key settings in `config/settings.py`:
- Team routing timeout: 30s
- Max conversation turns: 20
- Frustration threshold: Level 3
- Session timeout: 30 minutes

## 📊 Performance

- Response time: <2 seconds
- Concurrent users: 100+
- Memory efficiency: Optimized with HNSW indexing
- Knowledge search: Vector-based similarity

## 🔒 Security Features

- Payment advance scam detection
- Vulnerable customer protection
- Fraud pattern recognition
- Compliance warnings for investments
- Secure credential handling

## 👥 Team

Built with Agno Framework by the PagBank AI Team

## 📝 License

Proprietary - PagBank 2024
