# MCP Configuration for {{workspace_name}}

This directory contains Model Context Protocol (MCP) configurations for integrating with Claude and other AI models.

## Configuration Files

- `config.json`: Main MCP server configuration
- `settings.yaml`: Additional MCP settings (optional)

## Available Servers

### Core Servers

- **automagik-hive**: Core workspace functionality
  - Endpoint: {{api_endpoint}}
  - Database: {{database_url}}

- **postgres**: Database operations
  - Connection: {{postgres_connection_string}}

{{#if enable_filesystem_mcp}}
### Filesystem Server

- **filesystem**: File system operations
  - Working directory: {{workspace_path}}
  - Provides file read/write/search capabilities
{{/if}}

{{#if enable_git_mcp}}
### Git Server

- **git**: Version control operations  
  - Repository: {{workspace_path}}
  - Provides git status, diff, and commit capabilities
{{/if}}

## Usage

To use this MCP configuration with Claude:

1. Ensure all required services are running:
   ```bash
   uvx automagik-hive --status
   ```

2. Configure Claude to use this MCP configuration file:
   ```bash
   export MCP_CONFIG_PATH="{{workspace_path}}/.mcp/config.json"
   ```

3. Start your Claude session with MCP support

## Server Status

Check server health:

```bash
# Check all services
uvx automagik-hive --health

# Check specific components
uvx automagik-hive --status workspace
uvx automagik-hive --status agent
uvx automagik-hive --status genie
```

## Troubleshooting

### Connection Issues

If MCP servers fail to connect:

1. Verify services are running: `uvx automagik-hive --status`
2. Check logs: `uvx automagik-hive --logs`
3. Restart services: `uvx automagik-hive --restart`

### Database Issues

If postgres MCP server fails:

1. Check database connectivity: `uvx automagik-hive --health`
2. Verify connection string in config.json
3. Ensure database is properly initialized

### Missing Dependencies

If servers fail to start due to missing dependencies:

```bash
# Install Node.js dependencies for filesystem/git servers
npm install -g @modelcontextprotocol/server-filesystem
npm install -g @modelcontextprotocol/server-git

# Install Python dependencies
uv sync
```

## Auto-generated Configuration

This configuration was automatically generated by Automagik Hive workspace initialization. 

Last updated: {{timestamp}}